export type AssetLog = {_id:string,document?:(string|Asset),triggerBy?:(string|User)|null,operation?:string,changeData?:any};
export type Asset = {_id:string,_dynamic_category_?:(string|AssetCategory),invoice?:(string|AssetInvoice)|null,quantity?:number};
export type AssetCategoryLog = {_id:string,document?:(string|AssetCategory),triggerBy?:(string|User)|null,operation?:string,changeData?:any};
export type AssetCategory = {_id:string,_dynamic_category_:string};
export type AssetPropertyLog = {_id:string,document?:(string|AssetProperty),triggerBy?:(string|User)|null,operation?:string,changeData?:any};
export type AssetProperty = {_id:string,_dynamic_category_?:(string|AssetCategory),label:string,type?:"Date"|"DateRange"|"Time"|"DateTime"|"DateTimeRange"|"String"|"Number"|"Enum"|"Boolean"|"Unknown"|"File"|"Image"|"Video"|"Audio",enum?:(string)[]|null,hint?:string,required?:boolean,nullable?:boolean,importKey?:boolean,exportKey?:boolean,searchKey?:boolean,unique?:boolean,enumLabel?:(string)[],min?:number,max?:number,default?:any,orderIdx?:number,hidden?:boolean,immutable?:boolean};
export type AssetPicLog = {_id:string,document?:(string|AssetPic),triggerBy?:(string|User)|null,operation?:string,changeData?:any};
export type AssetPic = {_id:string,asset:(string|Asset),pic:(string|User),status?:"OK"|"NOK",quantity:number,projects?:((string|Project))[]};
export type AssetInvoiceLog = {_id:string,document?:(string|AssetInvoice),triggerBy?:(string|User)|null,operation?:string,changeData?:any};
export type AssetInvoice = {_id:string,file?:string,name:string};
export type Task = {_id:string,status:string,assigner:(string|User),name:string,detail?:string,pic:((string|User))[],supporter?:((string|User))[],reviewer:((string|User))[],plan:{start:Date,end:Date},finishTime?:Date,reviewTime?:Date,attachments?:(string)[]};
export type TaskCheckItem = {_id:string,task:(string|Task),description:string,pic?:(string|User),reviewer?:(string|User),finishTime?:Date,reviewTime?:Date,result?:string,score?:number,comment?:string};
export type PlmCode = {_id:string,testProject?:(string|TestProject),plmCode:string,note?:string,lastSync?:Date};
export type PlmDefect = {_id:string,plm_code?:(string|PlmCode),case_code:string,plm_link?:string,title:string,priority:"A"|"B"|"C",register_by?:string,user_submit?:(string|User)|null,testcase_id?:string,cl_number?:string,problem_status?:"Open"|"Resolve"|"Close"|"Delete",resolution_type?:string,defect_type?:string,rej_reason?:string,defect_class?:string,registered_date?:Date,resolve_date?:Date|null};
export type Project = {_id:string,logo?:string,name:string,alias_1?:string,alias_2?:string,alias_3?:string};
export type TestProject = {_id:string,project:(string|Project),packageVersion:string,pa:(string|User),note?:string,schedule?:{start:Date,end:Date}};
export type Ttv2TestSuite = {_id:string,testProject?:(string|TestProject),id:number,name?:string,iplan_start?:Date|null,iplan_end?:Date|null,mplan_start?:Date|null,mplan_end?:Date|null,iplan_ga?:Date|null,mplan_ga?:Date|null,lastSync?:Date};
export type Ttv2TestSet = {_id:string,tpid?:(string|Ttv2TestSuite),id:number,category?:string,title?:string,state?:number,syncFlag?:boolean};
export type Ttv2Testcase = {_id:string,id?:number,top?:(string|Ttv2TestSet),pid?:(string|Ttv2Testcase)|null,tcid?:number,title?:string,state?:"READY"|"SKIPPED"|"TESTING"|"PAUSE"|"TEST_NOK"|"TEST_OK"|"REVIEWING"|"REVIEW_PAUSE"|"REVIEW_NOK"|"REVIEW_OK"|"TEST_SUITE_RUNNING"|"TEST_SUITE_STOPPED",tester?:(string|User)|null,reviewer?:(string|User)|null,assigned_tester?:(string|User)|null,assigned_reviewer?:(string|User)|null,due_test?:Date,due_review?:Date};
export type Scope = {_id:string,name:string,actions:("Create"|"Read"|"Update"|"Delete")[],table:"User"|"Scope"|"User Group"|"Project"|"Test Project"|"PLM Code"|"PLM Defect"|"TTv2 Test suite"|"TTv2 Test set"|"TTv2 Testcase"|"Task"|"Task Check Item"|"Asset"|"Asset Log"|"Asset Invoice"|"Asset Invoice Log"|"Asset Category"|"Asset Category Log"|"Asset Pic"|"Asset Pic Log"|"Asset Property"|"Asset Property Log",fields:(string)[]};
export type User = {_id:string,_user_login_id_:string,fullName?:string,employeeNumber?:string,epId?:string,emailAddress?:string,avatar?:string,ttv2ID?:number,nickName?:string|null,birthday?:Date,external?:boolean};
export type UserScope = {_id:string,top?:(string|UserScope)|null,name:string,members?:((string|User))[],scopes?:((string|Scope))[]}